using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.AspNetCore.Mvc;
using Model.Vulnerability;
using Model.Vulnerability.Filters;
using System.ComponentModel;
using Repository.Interfaces;
using Microsoft.AspNetCore.Authorization;

namespace SecureWeb.Controllers
{
    [Authorize]
    [Route("api/[controller]")]
    public class VulnerabilityController : Controller
    {
        readonly IVulnerabilityRepository _repository;

        public VulnerabilityController(IVulnerabilityRepository repository)
        {
            _repository = repository;
        }

        [HttpPost]
        [Route("getResult")]
        public IActionResult GetResult([FromBody] FilterOptions options){
            var result = _repository.GetResult(options);

            return Ok(result);
        }

        [HttpGet]
        [Route("getFilters")]
        public IActionResult GetProperties()
        {
            var properties = typeof(Vulnerability).GetProperties().Select(p => new Filter()
            {
                Label = Attribute.IsDefined(p, typeof(DescriptionAttribute))
                    ? (Attribute.GetCustomAttribute(p, typeof(DescriptionAttribute)) as DescriptionAttribute)
                    ?.Description
                    : p.Name,
                PropertyName = p.Name
            });

            return Ok(properties);
        }
    }
}
