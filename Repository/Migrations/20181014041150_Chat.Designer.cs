// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20181014041150_Chat")]
    partial class Chat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Model.Chat.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Model.Chat.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChatId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Text");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Model.Vulnerability.Vulnerability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CVSS2");

                    b.Property<string>("CWEErrorDescription");

                    b.Property<string>("CWEErrorType");

                    b.Property<string>("Class");

                    b.Property<string>("CvSS3");

                    b.Property<string>("DangerLevel");

                    b.Property<string>("Description");

                    b.Property<string>("DetectionDate");

                    b.Property<string>("EliminationMeasures");

                    b.Property<string>("ExploitAvailability");

                    b.Property<string>("HardwareType");

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<string>("OtherInformation");

                    b.Property<string>("RemovalInformation");

                    b.Property<string>("SofrwareName");

                    b.Property<string>("SoftwareType");

                    b.Property<string>("SoftwareVendor");

                    b.Property<string>("SoftwareVersion");

                    b.Property<string>("SourceLink");

                    b.Property<string>("Status");

                    b.Property<string>("SystemsIdentifier");

                    b.HasKey("Id");

                    b.ToTable("Vulnerabilities");
                });

            modelBuilder.Entity("Repository.InternalModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PasswordHash")
                        .IsRequired();

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.Chat.Chat", b =>
                {
                    b.HasOne("Model.Vulnerability.Vulnerability", "Vulnerability")
                        .WithMany()
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Chat.Message", b =>
                {
                    b.HasOne("Model.Chat.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
