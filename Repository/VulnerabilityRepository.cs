using System.Collections.Generic;
using System.Linq;
using Model.ViewModels;
using Repository.Base;
using Repository.Interfaces;
using System.Text;
using System.Linq.Dynamic.Core;

namespace Repository
{
    public class VulnerabilityRepository : BaseRepository, IVulnerabilityRepository
    {
        public VulnerabilityRepository(string connectionString, IRepositoryContextFactory contextFactory) 
            : base(connectionString, contextFactory) { }

        public IEnumerable<Result> GetResults(FilterOptions options)
        {
            var lastKey = options.WhereEqualsOptions.Last().Key;
            var whereString = new StringBuilder();
            foreach (var value in options.WhereEqualsOptions)
            {
                whereString.Append($"{value.Key} == {value.Value}");

                if(value.Key != lastKey){
                    whereString.Append(" and ");
                }
            }

            var result = Context.Vulnerabilities
                                         .Skip(options.Skip)
                                         .Take(options.Take)
                                         .Where(whereString.ToString())
                                         .OrderBy(options.OrderBy)
                                         .Select(v => new Result(v));
                                
            return result;
        }
    }
}
